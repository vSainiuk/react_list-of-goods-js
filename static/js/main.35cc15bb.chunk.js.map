{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","REVERSE","App","useState","sortBy","setSortBy","reverse","setReverse","visibleGoods","goods","howSort","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,OACnBC,EAAiB,SACjBC,EAAU,UA2BT,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BD,SAA0BC,EAAOC,EAASJ,GAC/C,IAAMK,EAAa,YAAOF,GAqB1B,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKX,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,GACFK,EAAcL,UAGTK,EAMcM,CAAiBnB,EAAiBM,EAAQE,GAE/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAWL,IAG7BsB,QAAS,kBAAMhB,EAAUN,IAT3B,iCAcA,wBACEoB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAWJ,IAG7BqB,QAAS,kBAAMhB,EAAUL,IAT3B,4BAcA,wBACEmB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYd,IAAYL,IAG9BoB,QAAS,kBACLd,EADwB,OAAZD,EACD,KACAL,IAXjB,sBAgBEG,GAAUE,IACV,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAU,IACVE,EAAW,KALf,sBAaJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35cc15bb.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'name';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nexport function getPreparedGoods(goods, howSort, reverse) {\n  const preparedGoods = [...goods];\n\n  if (howSort) {\n    preparedGoods.sort((good1, good2) => {\n      switch (howSort) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState(null);\n  const [reverse, setReverse] = useState(null);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'iso-inf',\n              { 'is-light': sortBy !== SORT_BY_ALPHABET },\n            )\n          }\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortBy !== SORT_BY_LENGTH },\n            )\n          }\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverse !== REVERSE },\n            )\n          }\n          onClick={() => (reverse !== null\n            ? setReverse(null)\n            : setReverse(REVERSE))}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setReverse('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}